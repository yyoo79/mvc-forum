@using MVCForum.Utilities
@model MVCForum.Website.ViewModels.CreatePrivateMessageViewModel
@{
    ViewBag.Title = Html.LanguageString("PM.CreatePrivateMessage");
}
@section Header
{
    @(
        Bundle.JavaScript()
            .Add("~/Scripts/jquery.validate.min.js")
            .Add("~/Scripts/jquery.validate.unobtrusive.min.js")
            
            .MvcRender("~/scripts/cache/validate-combined_#.js")
    )
    <script src="@Url.Content("~/Scripts/jquery-ui-1.10.3.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            $("input#UserToUsername").autocomplete({
                source: app_base + "Members/Autocomplete"
            });
        });
    </script>
}
@section side
{
    @Html.Action("ListCategorySideMenu", "Category")
    @Html.Action("PopularTags", "Tag")
}
@using (Html.BeginForm("Create", "PrivateMessage", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(false)
    @Html.AntiForgeryToken()

    <fieldset>
        <legend>@ViewBag.Title</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.UserToUsername)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserToUsername, new { @class = "usertotextbox"})
            @Html.ValidationMessageFor(model => model.UserToUsername)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Subject)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Subject)
            @Html.ValidationMessageFor(model => model.Subject)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Message)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Message)
            @Html.ValidationMessageFor(model => model.Message)
        </div>
        <div class="submit-holder">
            <input type="submit" class="btn btn-large btn-success" value="@Html.LanguageString("PM.Send")" />
        </div>
    </fieldset>
}

@if (!string.IsNullOrEmpty(Model.PreviousMessage))
{
    <p class="previousmessageholder">
        <span class="originalmessage">@Html.LanguageString("PM.OriginalMessage")</span>
        @Html.Raw(AppHelpers.ConvertPostContent(Model.PreviousMessage))
    </p>
}