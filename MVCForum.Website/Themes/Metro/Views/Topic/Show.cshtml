@using MVCForum.Domain.DomainModel
@using MVCForum.Utilities
@using MVCForum.Website.Application
@using MVCForum.Website.ViewModels
@model ShowTopicViewModel
@{
    // SEO Stuff
    ViewBag.Title = Html.Raw(AppHelpers.CreatePageTitle(Model.Topic, Html.LanguageString("Topic.TitleFallBack")));
    ViewBag.MetaDesc = StringUtils.ReturnAmountWordsFromString(string.Concat(StringUtils.StripHtmlFromString(Model.TopicStarterPost.PostContent), "..."), 20);
    var totalCount = Convert.ToInt32(Model.TotalCount);
    //ViewBag.Canonical = Html.Raw(AppHelpers.CanonicalPagingTag(totalCount, Html.Settings().TopicsPerPage, Html));
    if (Request.QueryString.AllKeys.Any())
    {
        ViewBag.Canonical = Html.Raw(string.Format("<link rel=\"canonical\" href=\"{0}\"/>", Model.Topic.NiceUrl));
    }

    // Email subscription
    var subScribe = string.Empty;
    var unSubscribe = string.Empty;
    const string displayNone = "style='display:none;'";
    if (Model.IsSubscribed)
    {
        subScribe = displayNone;
    }
    else
    {
        unSubscribe = displayNone;
    }

    // Set a ViewBag for the category
    TempData[AppConstants.DefaultCategoryViewBagName] = Model.Topic.Category.Id;
    var qs = Request.QueryString[AppConstants.PostOrderBy] ?? string.Empty;
    var disablePosting = Model.User != null && (Model.User.DisablePosting == true);
}
@section SocialMeta {
    <meta property="og:title" content="@ViewBag.Title" />
    <meta property="og:url" content="@HttpContext.Current.Request.Url.AbsoluteUri" />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content="@ViewBag.Title" />
    <meta name="twitter:description" content="@ViewBag.MetaDesc" />
}

@section Header
{
    @(Bundle.Css()
              .Add("~/Scripts/fancybox/jquery.fancybox.css")
              .MvcRender("~/content/cache/fancybox_#.css"))
    <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js"></script>
    @(Bundle.JavaScript()
        .Add("~/Scripts/fancybox/jquery.fancybox.js")
        .Add("~/Scripts/topic.js")
        .MvcRender("~/scripts/cache/topic_#.js"))
}

@section side
{
    @Html.Action("ListCategorySideMenu", "Category")
    @Html.Action("SideSearch", "Search")
    @Html.Action("PopularTags", "Tag")
    @Html.Action("CurrentWeekHighPointUsers", "Point")
}
@Html.Action("GetTopicBreadcrumb", "Topic", new { topic = Model.Topic })
<div class="row-fluid topicheading">

    <div class="span9 topicheaderholder">
        <h1 class="topicheader">@Html.Raw(Model.Topic.Name)</h1>
    </div>
    <div class="span3 topicsubscription">
        @if (Model.User != null && Html.Settings().EnableEmailSubscriptions)
        {
            <div class="subscribebuttons clearfix">
                <a @Html.Raw(subScribe) title="Subscribe Via Email" href="#" class="emailsubscription" rel="@Model.Topic.Id">
                    <span class="emailsubscriptionimage" rel="topic">@Html.LanguageString("Topic.Subscribe")</span>
                </a>
                <a @Html.Raw(unSubscribe) title="Unsubscribe From Emails" href="#" class="emailunsubscription" rel="@Model.Topic.Id">
                    <span class="emailunsubscriptionimage" rel="topic">@Html.LanguageString("Topic.UnSubscribe")</span>
                </a>
            </div>
        }

        <div class="postsocialbuttons clearfix">
            <div class="addthis_toolbox addthis_default_style">
                <a class="addthis_button_preferred_1"></a>
                <a class="addthis_button_preferred_2"></a>
                <a class="addthis_button_preferred_3"></a>
                <a class="addthis_button_preferred_4"></a>
                <a class="addthis_button_compact"></a>
                <a class="addthis_counter addthis_bubble_style"></a>
            </div>
        </div>

    </div>

</div>

@if (Html.Settings().EnablePolls == true)
{
    <div class="pollcontainer">
        @if (Model.Topic.Poll != null)
        {
            // Show the poll if there is one
            var viewModel = new ShowPollViewModel { Poll = Model.Topic.Poll, TotalVotesInPoll = Model.TotalVotesInPoll, UserHasAlreadyVoted = Model.UserHasAlreadyVotedInPoll, UserAllowedToVote = Model.Permissions[AppConstants.PermissionVoteInPolls].IsTicked };
            Html.RenderPartial("_Poll", viewModel);
        }
    </div>
}

<div class="topicstarterpost">
    @{
        var topicStarterPostModel = new ViewPostViewModel { Permissions = Model.Permissions, Post = Model.TopicStarterPost, User = Model.User, ParentTopic = Model.Topic };
        Html.RenderPartial("_Post", topicStarterPostModel);
    }
    <div class="row-fluid topicstarterpostbeginpostsheading">
        <div class="span8 topicstarterpostcomments">
            @(totalCount - 1) @Html.LanguageString("Topic.CommentsDetails")
        </div>
        <div class="span4 topicpostorderfilter">
            @if ((totalCount - 1) > 0)
            {
                <text> @Html.LanguageString("PostFilter.OrderBy")
                <a class="orderfilerlink @(string.IsNullOrEmpty(qs) ? "orderfilerlinkactive" : "")" href="@Model.Topic.NiceUrl">@Html.LanguageString("PostFilter.Standard")</a> |
                <a class="orderfilerlink @(qs.Contains(PostOrderBy.Newest.ToString()) ? "orderfilerlinkactive" : "")" href="?@AppConstants.PostOrderBy=@PostOrderBy.Newest.ToString()">@Html.LanguageString("PostFilter.Newest")</a> |
                <a class="orderfilerlink @(qs.Contains(PostOrderBy.Votes.ToString()) ? "orderfilerlinkactive" : "")" href="?@AppConstants.PostOrderBy=@PostOrderBy.Votes.ToString()">@Html.LanguageString("PostFilter.Votes")</a>
                </text>
            }
        </div>
    </div>

</div>

@foreach (var post in Model.Posts)
{
    var viewModel = new ViewPostViewModel { Permissions = Model.Permissions, Post = post, User = Model.User, ParentTopic = Model.Topic };
    Html.RenderPartial("_Post", viewModel);
}

@if (Model.Posts.TotalPages > 1)
{
    <a href="#" class="showmoreposts btn"><span class="smpactive">@Html.LanguageString("Topic.ShowMorePosts")</span><span class="smploading" style="display: none;">@Html.LanguageString("Topic.ShowMorePostsLoading")</span></a>
}

@if (!Model.Topic.IsLocked)
{
    <span id="newpostmarker"></span>

    if (!Model.Permissions[AppConstants.PermissionDenyAccess].IsTicked && !Model.Permissions[AppConstants.PermissionReadOnly].IsTicked)
    {
        @Html.Partial("_CreateNewPost", new CreateAjaxPostViewModel { Topic = Model.Topic.Id, DisablePosting = disablePosting, PostContent = Model.PostContent})
    }
    <a id="createpost"></a>
}
else
{
    <p class="topiclockedmessage">@Html.LanguageString("Topic.IsLocked")</p>
}

@*@if (Model.Posts.TotalPages > 1)
    {
        @Html.Pager(Convert.ToInt32(Model.PageIndex), Html.Settings().PostsPerPage, totalCount, null)
    }*@

<input type="hidden" id="pageIndex" value="@(Model.PageIndex + 1)" />
<input type="hidden" id="topicId" value="@Model.Topic.Id" />
<input type="hidden" id="totalPages" value="@Model.Posts.TotalPages" />
