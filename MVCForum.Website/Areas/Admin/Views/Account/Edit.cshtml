@model MVCForum.Website.Areas.Admin.ViewModels.MemberEditViewModel
@{
    ViewBag.Title = "Edit";
    var titleText = (Model.Id == Guid.Empty) ? "Add User" : "Edit User";    
}
@section AdminHeader
{
    @(
 Bundle.JavaScript()
            .Add("~/Scripts/jquery.validate.min.js")
            .Add("~/Scripts/jquery.validate.unobtrusive.min.js")
            .MvcRender("~/scripts/cache/validate-combined_#.js")
     )
}
@using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.HiddenFor(x => Model.Id)

    @Html.ValidationSummary(false)
    
    <fieldset>
        <legend>@Html.Raw(titleText)</legend>

        <div class="editor-label">
            @Html.LabelFor(x => x.UserName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(x => x.UserName)
            @Html.ValidationMessageFor(x => x.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(x => x.PasswordQuestion)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(x => x.PasswordQuestion)
            @Html.ValidationMessageFor(x => x.PasswordQuestion)
        </div>

        <div class="editor-label">
            @Html.LabelFor(x => x.PasswordAnswer)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(x => x.PasswordAnswer)
            @Html.ValidationMessageFor(x => x.PasswordAnswer)
        </div>

        <div class="editor-label">
            @Html.LabelFor(x => x.Email)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(x => x.Email)
            @Html.ValidationMessageFor(x => x.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(x => x.Age)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(x => x.Age)
            @Html.ValidationMessageFor(x => x.Age)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(x => x.Avatar)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(x => x.Avatar)
            @Html.ValidationMessageFor(x => x.Avatar)
        </div>

        <div class="editor-label">
            @Html.LabelFor(x => x.Location)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(x => x.Location)
            @Html.ValidationMessageFor(x => x.Location)
        </div>

        <div class="editor-label">
            @Html.LabelFor(x => x.Website)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(x => x.Website)
            @Html.ValidationMessageFor(x => x.Website)
        </div>

        <div class="editor-label">
            @Html.LabelFor(x => x.Twitter)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(x => x.Twitter)
            @Html.ValidationMessageFor(x => x.Twitter)
        </div>

        <div class="editor-label">
            @Html.LabelFor(x => x.Facebook)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(x => x.Facebook)
            @Html.ValidationMessageFor(x => x.Facebook)
        </div>

        <div class="editor-label">
            @Html.LabelFor(x => x.Signature)
        </div>
        <div class="editor-field">
            @Html.EditorFor(x => x.Signature)
            @Html.ValidationMessageFor(x => x.Signature)
        </div>

        <h2>Admin Specific</h2>

        <div class="editor-label">
            <p><a href="@Url.Action("DeleteUsersPosts", "Account", new { area = "Admin", id = Model.Id }, null)" onclick="return confirm('Be careful, as soon as you click this all @Model.UserName posts and topics will be deleted')" class="btn">Delete All Members Posts</a></p>
        </div>

        <div class="editor-field n3ocheckboxfield">
            @Html.CheckBoxFor(x => x.DisableEmailNotifications)
            @Html.LabelFor(x => x.DisableEmailNotifications)
            @Html.ValidationMessageFor(x => x.DisableEmailNotifications)
        </div>

        <div class="editor-field n3ocheckboxfield">
            @Html.CheckBoxFor(x => x.DisablePosting)
            @Html.LabelFor(x => x.DisablePosting)
            @Html.ValidationMessageFor(x => x.DisablePosting)
        </div>

        <div class="editor-field n3ocheckboxfield">
            @Html.CheckBoxFor(x => x.DisablePrivateMessages)
            @Html.LabelFor(x => x.DisablePrivateMessages)
            @Html.ValidationMessageFor(x => x.DisablePrivateMessages)
        </div>
        
        <div class="editor-field n3ocheckboxfield">
            @Html.CheckBoxFor(x => x.DisableFileUploads)
            @Html.LabelFor(x => x.DisableFileUploads)
            @Html.ValidationMessageFor(x => x.DisableFileUploads)
        </div>

        <div class="editor-field n3ocheckboxfield">
            @Html.CheckBoxFor(x => x.IsApproved)
            @Html.LabelFor(x => x.IsApproved)
        </div>

        <div class="editor-field n3ocheckboxfield">
            @Html.CheckBoxFor(x => x.IsLockedOut)
            @Html.LabelFor(x => x.IsLockedOut)
            @Html.ValidationMessageFor(x => x.IsLockedOut)
        </div>

        <div class="editor-label">
            @Html.LabelFor(x => x.Comment)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(x => x.Comment)
            @Html.ValidationMessageFor(x => x.Comment)
        </div>

        @*<div class="editor-label">
            @Html.Label("Roles")
        </div>    
        <div class="editor-checkboxes">
            @foreach (var role in @Model.AllRoles)
            {
                var showChecked = @Model.Roles.Contains(role.RoleName) ? "checked='checked'" : "";
                if (role.RoleName != AppConstants.GuestRoleName)
                {
                    <span class="editrolecb"><input type="checkbox" name="Roles" value=@role.RoleName @showChecked /> @Html.Raw(role.RoleName)</span>
                }
            }
        </div>*@

        <div class="submit-holder">
            <input type="submit" class="btn btn-large btn-success" value="Save" /> <a href="@Url.Action("Delete", new{Model.Id})" onclick="return confirm('Are you sure you want to delete @Model.UserName?')" class="btn btn-large btn-danger">Delete</a>
        </div>
    </fieldset>
}


